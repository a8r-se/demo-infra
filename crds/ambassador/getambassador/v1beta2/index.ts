// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { FilterArgs } from "./filter";
export type Filter = import("./filter").Filter;
export const Filter: typeof import("./filter").Filter = null as any;
utilities.lazyLoad(exports, ["Filter"], () => require("./filter"));

export { FilterPolicyArgs } from "./filterPolicy";
export type FilterPolicy = import("./filterPolicy").FilterPolicy;
export const FilterPolicy: typeof import("./filterPolicy").FilterPolicy = null as any;
utilities.lazyLoad(exports, ["FilterPolicy"], () => require("./filterPolicy"));

export { RateLimitArgs } from "./rateLimit";
export type RateLimit = import("./rateLimit").RateLimit;
export const RateLimit: typeof import("./rateLimit").RateLimit = null as any;
utilities.lazyLoad(exports, ["RateLimit"], () => require("./rateLimit"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:getambassador.io/v1beta2:Filter":
                return new Filter(name, <any>undefined, { urn })
            case "kubernetes:getambassador.io/v1beta2:FilterPolicy":
                return new FilterPolicy(name, <any>undefined, { urn })
            case "kubernetes:getambassador.io/v1beta2:RateLimit":
                return new RateLimit(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aescrds", "getambassador.io/v1beta2", _module)
