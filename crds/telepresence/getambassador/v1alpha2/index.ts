// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { InterceptSpecificationArgs } from "./interceptSpecification";
export type InterceptSpecification = import("./interceptSpecification").InterceptSpecification;
export const InterceptSpecification: typeof import("./interceptSpecification").InterceptSpecification = null as any;
utilities.lazyLoad(exports, ["InterceptSpecification"], () => require("./interceptSpecification"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:getambassador.io/v1alpha2:InterceptSpecification":
                return new InterceptSpecification(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("tpcrds", "getambassador.io/v1alpha2", _module)
